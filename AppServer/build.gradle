apply plugin: 'tomcat'
apply plugin: 'war'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.2.5'
    }
}

dependencies {
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    def tomcatVersion = '7.0.65'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }

    //Using log4j
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.6.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.6.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-web', version: '2.6.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-iostreams', version: '2.6.2'

    compile project(':WebCrawling')
    //runtime project(':api')
}

/*tomcatRun {
    daemon = true
    httpPort = 5000
    stopKey = 'rbi'
    outputFile = file('logs/tomcat.log')
    webDefaultXml = file('src/main/webapp/WEB-INF/web.xml')
}

tomcatStop {
    stopKey = 'rbi'
}*/

tomcatRunWar {
    //daemon = true //no daemon as losing control of process and process will get killed
    httpPort = 8080
    //stopKey = 'rbi' //no custom stopKey as default stop run from gradle will not work
    outputFile = file('Logs/tomcatWar.log')
    webDefaultXml = file('src/web.xml')
    //this is default context.xml refered from Tomcat, here just for reminding for listing out
    configFile = file('src/main/webapp/META-INF/context.xml')
}

//TODO make tomcatRun workable

task(customRunWar, group: 'web application', description: 'cannot build war, not taking effect of log4j2.xml change' +
        ', use default tomcatRunWar instead for building') {
    doFirst{
        delete 'Logs/'
        println 'Deleted Logs'
    }
    doLast{
        tomcatRunWar.execute()
    }
}

task(customClean, group: 'build') {
    doFirst{
        delete 'Logs/'
        println 'Deleted Logs'
    }
    doLast{
        clean.execute()
    }
}

war {
    from 'src/rootContent' // adds a file-set to the root of the archive
    //webInf { from 'src/additionalWebInf' } // adds a file-set to the WEB-INF dir.
    //classpath fileTree('additionalLibs') // adds a file-set to the WEB-INF/lib dir.
    //classpath configurations.moreLibs // adds a configuration to the WEB-INF/lib dir.
    webXml = file('src/web.xml') // copies a file to WEB-INF/web.xml
}

//TODO make file sharing to download only, not to present